/*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* You can add global styles to this file, and also import other style files */
@import './theme.scss';

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$traffic-portal-primary: mat-palette($mat-blue, 800);
$traffic-portal-accent: mat-palette($mat-pink, 700, 600, 800);

// The warn palette is optional (defaults to red).
$traffic-portal-warn: mat-palette($mat-orange, 500);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$traffic-portal-theme: mat-light-theme((
  color: (
    primary: $traffic-portal-primary,
    accent: $traffic-portal-accent,
    warn: $traffic-portal-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($traffic-portal-theme);
@include theme($traffic-portal-theme);

@font-face {
	font-family: 'Roboto';
	font-style: normal;
	font-weight: 300;
	font-display: swap;
	src: url(./assets/Roboto.300.ttf) format('truetype');
}
@font-face {
	font-family: 'Roboto';
	font-style: normal;
	font-weight: 400;
	font-display: swap;
	src: url(./assets/Roboto.400.ttf) format('truetype');
}
@font-face {
	font-family: 'Roboto';
	font-style: normal;
	font-weight: 500;
	font-display: swap;
	src: url(./assets/Roboto.500.ttf) format('truetype');
}

@font-face {
	font-family: 'Material Icons';
	font-style: normal;
	font-weight: 400;
	src: url(./assets/MaterialIcons.ttf) format('truetype');
}

.material-icons {
	font-family: 'Material Icons';
	font-weight: normal;
	font-style: normal;
	font-size: 24px;
	line-height: 1;
	letter-spacing: normal;
	text-transform: none;
	display: inline-block;
	white-space: nowrap;
	word-wrap: normal;
	direction: ltr;
}

body {
	background-color: white;
	margin: 0;
	overflow-x: hidden;
}

span.warning {
	background-color: $warning;
	color: white;
	&::before {
		content: "ÔÅ™ ";
		font-family: "FontAwesome";
		color: inherit;
		padding: 2px 5px;
	}
}

.mat-button-base {
	// cursor: pointer;
	text-transform: uppercase;
}

/* read-only pseudo-class always applies to checkbox inputs, because read-write never applies. Go figure. */
optgroup:disabled option:disabled, button:disabled, input:read-only:not([type="checkbox"]), select:disabled, textarea:read-only, input[type="checkbox"][readonly] {
	cursor: not-allowed;
}

h1, h2, h3, h4, h5, h6, label, legend {
	font-family: 'Ubuntu', 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

@import "../node_modules/ag-grid-community/src/styles/ag-grid.scss";
@import "../node_modules/ag-grid-community/src/styles/ag-theme-alpine/sass/ag-theme-alpine-mixin.scss";

.ag-theme-alpine {
	@include ag-theme-alpine();
}

.ag-header-cell-menu-button {
	cursor: pointer;
}

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

button {
	cursor: pointer;
	text-transform: uppercase;
}
