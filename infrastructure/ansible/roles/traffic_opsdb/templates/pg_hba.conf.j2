{#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#}
# PostgreSQL Client Authentication Configuration File
# ===================================================
#
# Refer to the "Client Authentication" section in the PostgreSQL
# documentation for a complete description of this file.  A short
# synopsis follows.
#
# This file controls: which hosts are allowed to connect, how clients
# are authenticated, which PostgreSQL user names they can use, which
# databases they can access.  Records take one of these forms:
#
# local      DATABASE  USER  METHOD  [OPTIONS]
# host       DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostssl    DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
# hostnossl  DATABASE  USER  ADDRESS  METHOD  [OPTIONS]
#
# (The uppercase items must be replaced by actual values.)
#
# The first field is the connection type: "local" is a Unix-domain
# socket, "host" is either a plain or SSL-encrypted TCP/IP socket,
# "hostssl" is an SSL-encrypted TCP/IP socket, and "hostnossl" is a
# plain TCP/IP socket.
#
# DATABASE can be "all", "sameuser", "samerole", "replication", a
# database name, or a comma-separated list thereof. The "all"
# keyword does not match "replication". Access to replication
# must be enabled in a separate record (see example below).
#
# USER can be "all", a user name, a group name prefixed with "+", or a
# comma-separated list thereof.  In both the DATABASE and USER fields
# you can also write a file name prefixed with "@" to include names
# from a separate file.
#
# ADDRESS specifies the set of hosts the record matches.  It can be a
# host name, or it is made up of an IP address and a CIDR mask that is
# an integer (between 0 and 32 (IPv4) or 128 (IPv6) inclusive) that
# specifies the number of significant bits in the mask.  A host name
# that starts with a dot (.) matches a suffix of the actual host name.
# Alternatively, you can write an IP address and netmask in separate
# columns to specify the set of hosts.  Instead of a CIDR-address, you
# can write "samehost" to match any of the server's own IP addresses,
# or "samenet" to match any address in any subnet that the server is
# directly connected to.
#
# METHOD can be "trust", "reject", "md5", "password", "gss", "sspi",
# "krb5", "ident", "peer", "pam", "ldap", "radius" or "cert".  Note that
# "password" sends passwords in clear text; "md5" is preferred since
# it sends encrypted passwords.
#
# OPTIONS are a set of options for the authentication in the format
# NAME=VALUE.  The available options depend on the different
# authentication methods -- refer to the "Client Authentication"
# section in the documentation for a list of which options are
# available for which authentication methods.
#
# Database and user names containing spaces, commas, quotes and other
# special characters must be quoted.  Quoting one of the keywords
# "all", "sameuser", "samerole" or "replication" makes the name lose
# its special character, and just match a database or username with
# that name.
#
# This file is read on server startup and when the postmaster receives
# a SIGHUP signal.  If you edit the file on a running system, you have
# to SIGHUP the postmaster for the changes to take effect.  You can
# use "pg_ctl reload" to do that.

# Put your actual configuration here
# ----------------------------------
#
# If you want to allow non-local connections, you need to add more
# "host" records.  In that case you will also need to make PostgreSQL
# listen on a non-local interface via the listen_addresses
# configuration parameter, or via the -i or -h command line switches.



# TYPE  DATABASE        USER            ADDRESS                 METHOD

# Gives Access to All
#host all all all md5
# ------------------------------------------------------
#  Postgres user
# ------------------------------------------------------
   host  all   {{ postgresql_user }}  127.0.0.1/32  trust
   host  all   {{ postgresql_user }}  ::1/128  trust

{% if groups['traffic_ops'] is defined %}
   # --  TO Instances for Postinstall
{% for host_obj in (groups['traffic_ops']) %}
{% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  all {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
{%endif%}
{% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  all {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
{%endif%}
{% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   #host  all {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
{%endif%}
{% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   #host  all {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
{%endif%}
{% endfor %}
{% endif %}

# ------------------------------------------------------
#  Postgres SUPERUSER
# ------------------------------------------------------
   # --  Primary
   {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

   {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

{% if groups['traffic_opsdb-standby'] is defined %}
   # --  Secondary
   {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

   {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

{% endif %}
{% if groups['traffic_opsdb-replicas'] is defined %}
   # --  Replicas
   {% for host_obj in (groups['traffic_opsdb-replicas']) %}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ postgresql_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
   {% endfor %}

{% endif %}
#-------------------------------------
#  TRAFFIC OPS
# ------------------------------------------------------
{% if groups['traffic_ops'] is defined %}
{% for host_obj in (groups['traffic_ops']) %}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ todb_db_name }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   host  {{ todb_db_name }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   host  {{ todb_db_name }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ postgresql_user }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ postgresql_user }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   host  {{ postgresql_user }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   host  {{ postgresql_user }} {{ todb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
{% endfor %}
{% endif %}

#-------------------------------------
#  TRAFFIC VAULT
# ------------------------------------------------------
{% if groups['traffic_ops'] is defined %}
{% for host_obj in (groups['traffic_ops']) %}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ tvdb_db_name }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   host  {{ tvdb_db_name }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   host  {{ tvdb_db_name }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}

   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   hostssl  {{ postgresql_user }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   hostssl  {{ postgresql_user }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   host  {{ postgresql_user }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   host  {{ postgresql_user }} {{ tvdb_username }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
{% endfor %}
{% endif %}

{% if postgresql_replica_user is defined and postgresql_replica_user is not none %}
# ------------------------------------------------------
#  REPLICATION
# ------------------------------------------------------
# --  Primary
      {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
      {%endif%}
      {% if hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[groups['traffic_opsdb-primary'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-primary'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
      {%endif%}

{% if groups['traffic_opsdb-standby'] is defined %}
# --  Secondary
      {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv4.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv4_addresses[0]) }}/32  md5
      {%endif%}
      {% if hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[groups['traffic_opsdb-standby'] | first].ansible_default_ipv6.address|default(hostvars[groups['traffic_opsdb-standby'] | first].ansible_all_ipv6_addresses[0]) }}/128  md5
      {%endif%}
{% endif %}

{% if groups['traffic_opsdb-replicas'] is defined %}
# --  Replicas
  {% for host_obj in (groups['traffic_opsdb-replicas']) %}
      {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
      {%endif%}
      {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
      hostssl  replication {{ postgresql_replica_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
      {%endif%}
  {% endfor %}
{% endif %}
{% endif %}

{% if telegraf_db_user is defined and telegraf_db_user is not none %}
# ------------------------------------------------------
#  TELEGRAF
# ------------------------------------------------------
  host    {{ todb_db_name }}     {{ telegraf_db_user }}        127.0.0.1/32  md5
  host    {{ todb_db_name }}     {{ telegraf_db_user }}        ::1/128  md5
{% if groups['traffic_stats'] is defined %}
{% for host_obj in (groups['traffic_stats']) %}
  {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
  host  {{ todb_db_name }} {{ telegraf_db_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
  {%endif%}
  {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
  host  {{ todb_db_name }} {{ telegraf_db_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
  {%endif%}
{% endfor %}
{% endif %}
{% endif %}

{% if grafana_db_user is defined and grafana_db_user is not none and groups['traffic_stats'] is defined %}
# ------------------------------------------------------
#  GRAFANA
# ------------------------------------------------------
 {% for host_obj in (groups['traffic_stats']) %}
   {% if hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) is defined %}
   host  {{ grafana_db_name }} {{ grafana_db_user }} {{ hostvars[host_obj].ansible_default_ipv4.address|default(hostvars[host_obj].ansible_all_ipv4_addresses[0]) }}/32  md5
   {%endif%}
   {% if hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) is defined %}
   host  {{ grafana_db_name }} {{ grafana_db_user }} {{ hostvars[host_obj].ansible_default_ipv6.address|default(hostvars[host_obj].ansible_all_ipv6_addresses[0]) }}/128  md5
   {%endif%}
 {% endfor %}
{% endif %}
