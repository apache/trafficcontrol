/*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "error"
      }
    },
    {
      "files": [
        "*.ts",
        "*.tsx",
        "*.js"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "@grafana/eslint-config"
      ],
      "plugins": [
        "react",
        "@typescript-eslint",
        "eslint-plugin-import",
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow"
      ],
      "rules": {
        "@typescript-eslint/interface-name-prefix": "off",
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/unified-signatures": "error",
        "complexity": "off",
        "constructor-super": "error",
        "no-mixed-spaces-and-tabs": "error",
        "eqeqeq": [
          "error",
          "smart"
        ],
        "guard-for-in": "error",
        "id-blacklist": [
          "error",
          "any",
          "Number",
          "number",
          "String",
          "string",
          "Boolean",
          "boolean",
          "Undefined",
          "undefined"
        ],
        "id-match": "error",
        "import/no-deprecated": "warn",
//        "jsdoc/newline-after-description": "error",
        "max-classes-per-file": "off",
        "no-caller": "error",
        "no-cond-assign": "error",
        "no-console": [
          "error",
          {
            "allow": [
              "trace",
              "dir",
              "timeLog",
              "assert",
              "clear",
              "count",
              "countReset",
              "group",
              "groupEnd",
              "table",
              "groupCollapsed",
              "Console",
              "profile",
              "profileEnd",
              "timeStamp",
              "context"
            ]
          }
        ],
        "no-debugger": "error",
        "no-eval": "error",
        "no-new-wrappers": "error",
        "no-throw-literal": "error",
        "no-undef-init": "error",
        "no-underscore-dangle": "error",
        "no-unsafe-finally": "error",
        "no-unused-labels": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "one-var": [
          "error",
          "never"
        ],
        "prefer-const": "error",
        "radix": "error",
        "use-isnan": "error",
        "valid-typeof": "off",
        "arrow-body-style": "error",
        "comma-dangle": "off",
        "curly": "error",
        "eol-last": "error",
        "jsdoc/check-alignment": "error",
        "max-len": [
          "error",
          {
            "code": 140
          }
        ],
        "new-parens": "error",
        "no-trailing-spaces": "error",
        "quote-props": [
          "error",
          "as-needed"
        ],
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "never",
            "asyncArrow": "always",
            "named": "never"
          }
        ],
        "quotes": "off",
        "@typescript-eslint/type-annotation-spacing": "error",
        "@typescript-eslint/array-type": "off",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-types": [
          "error",
          {
            "extendDefaults": false,
            "types": {
              "Object": {
                "message": "Avoid using the `Object` type. Did you mean `object`?"
              },
              "Function": {
                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."
              },
              "Boolean": {
                "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
              },
              "Number": {
                "message": "Avoid using the `Number` type. Did you mean `number`?"
              },
              "String": {
                "message": "Avoid using the `String` type. Did you mean `string`?"
              },
              "Symbol": {
                "message": "Avoid using the `Symbol` type. Did you mean `symbol`?"
              }
            }
          }
        ],
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/dot-notation": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "constructors": "off"
            }
          }
        ],
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/indent": [
          "error",
          "tab"
        ],
        "@typescript-eslint/member-delimiter-style": [
          "error",
          {
            "multiline": {
              "delimiter": "semi",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "semi",
              "requireLast": false
            }
          }
        ],
        "@typescript-eslint/member-ordering": "off",
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "enumMember",
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "property",
            "modifiers": [
              "static",
              "readonly"
            ],
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "default",
            "format": [
              "camelCase"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE",
							"PascalCase"
            ],
            "leadingUnderscore": "allow",
            "trailingUnderscore": "allow"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          }
        ],
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-extraneous-class": [
          "error",
          {
            "allowWithDecorator": true
          }
        ],
        "@typescript-eslint/no-duplicate-imports": [
          "error"
        ],
        "@typescript-eslint/no-dynamic-delete": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-inferrable-types": [
          "warn",
          {
            "ignoreParameters": true
          }
        ],
        "@typescript-eslint/no-invalid-this": [
          "error",
          {
            "capIsConstructor": false
          }
        ],
        "@typescript-eslint/no-invalid-void-type": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-misused-promises": "error",
        "@typescript-eslint/no-non-null-assertion": "error",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-qualifier": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unused-expressions": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "@typescript-eslint/no-use-before-define": "error",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-function-type": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": [
          "error",
          "double",
          {
            "avoidEscape": true
          }
        ],
        "@typescript-eslint/semi": [
          "error"
        ],
        "@typescript-eslint/typedef": "off",
        "jsdoc/no-types": "error",
        "jsdoc/require-description": "error",
        "jsdoc/require-jsdoc": [
          "error",
          {
            "contexts": [
              "ClassProperty",
              "TSInterfaceDeclaration",
              "TSTypeAliasDeclaration",
              "TSEnumDeclaration",
              "TSEnumMember",
              "TSAbstractClassProperty"
            ],
            "require": {
              "ClassDeclaration": true,
              "MethodDefinition": true
            },
            "checkConstructors": false,
            "checkGetters": true,
            "checkSetters": false,
            "enableFixer": false
          }
        ],
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/triple-slash-reference": "error",
        "arrow-parens": [
          "off",
          "always"
        ],
        "brace-style": [
          "error",
          "1tbs"
        ],
        "class-methods-use-this": "off",
        "import/export": "error",
        "import/first": "error",
        "import/newline-after-import": "error",
        "import/no-cycle": [
          "error",
          {
            "ignoreExternal": true
          }
        ],
        "import/no-self-import": "error",
        "import/no-useless-path-segments": [
          "error",
          {
            "commonjs": true,
            "noUselessIndex": true
          }
        ],
        "import/order": [
          "error",
          {
            "alphabetize": {
              "order": "asc"
            },
            "groups": [
              "builtin",
              "external",
              "internal",
              "parent",
              "sibling"
            ],
            "pathGroups": [
              {
                "group": "builtin",
                "pattern": "zone.js/**/*",
                "position": "before"
              },
              {
                "group": "external",
                "pattern": "(@(angular|fortawesome)|chart.js|rxjs)*/**/*",
                "position": "before"
              },
              {
                "group": "internal",
                "pattern": "src/**/*"
              }
            ],
            "pathGroupsExcludedImportTypes": [
              "zone.js/**/*",
              "@fortawesome*/**/*",
              "chart.js",
              "rxjs"
            ],
            "newlines-between": "always",
            "warnOnUnassignedImports": true
          }
        ],
        "linebreak-style": [
          "error",
          "unix"
        ],
        "no-bitwise": "off",
        "no-duplicate-case": "error",
        "no-duplicate-imports": "off",
        "no-else-return": "error",
        "no-empty": "error",
        "no-extra-bind": "error",
        "no-fallthrough": "off",
        "no-invalid-this": "off",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxBOF": 0,
            "maxEOF": 0
          }
        ],
        "no-new-func": "error",
        "no-redeclare": "off",
        "no-restricted-imports": [
          "error",
          {
            "patterns": [
              {
                "message": "Going up more than one directory for an import is overly complex; use an import path that starts with 'src/' instead",
                "group": [
                  "../../*"
                ]
              }
            ]
          }
        ],
        "no-return-await": "error",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-shadow": "off",
        "prefer-arrow/prefer-arrow-functions": "off",
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "sort-keys": [
          "error",
          "asc",
          {
            "natural": true
          }
        ],
        "valid-jsdoc": [
          "error",
          {
            "matchDescription": ".+",
            "requireReturn": false,
            "requireReturnType": false,
            "requireParamType": false,
            "prefer": {
              "return": "returns"
            }
          }
        ]
      }
    }
  ]
}
